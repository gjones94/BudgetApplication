@using BudgetApp.ViewModels.CostCategoryViewModels;
@using Newtonsoft.Json;
@model IList<BudgetToActualVM>

<div class="slide m-4" style="display: none">

    <div>
        <h1 class="text-theme text-center">Compare Expenses</h1>
    </div>

    @{
        if(Model.Count == 0)
        {
            <div class="row mt-5 text-center">
                <div class="col-12 h6 text-theme">
                    [No Data Available]
                </div>
            </div>
        }
        else
        {
            <div class="row">
                <div class="d-flex col-md-6 col-12 offset-md-3">
                    <canvas id="barChart" width="300" height="300"></canvas>
                </div>
            </div>
        }
     }
</div>

<script type="text/javascript">

    function getRandomRGBA() {
        const r = Math.floor(Math.random() * 256);
        const g = Math.floor(Math.random() * 256);
        const b = Math.floor(Math.random() * 256);
        return `rgba(${r},${g},${b}, 1)`;
    }

    function generateRandomColorsArray(n) {
        const colorsArray = [];

        for (let i = 0; i < n; i++) {
            colorsArray.push(getRandomRGBA());
        }

        return colorsArray;
    }

    function DrawBarChart() {
        var categories = @Html.Raw(JsonConvert.SerializeObject(Model));
        var labels = categories.map((category) => category.Name);
        var amounts = categories.map((category) => category.SpentAmount);
        const colors = generateRandomColorsArray(amounts.length);

        const data = {
            labels: labels,
            datasets: [{
                axis: 'x',
                data: amounts,
                fill: false,
                backgroundColor: ['#59C9A5'],
                borderWidth: 1
            }]
        };

        new Chart("barChart", {
            type: 'bar',
            data,
            options: {
                plugins: 
                {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        grid: {
                            display: false
                        }
                    },
                    y: {
                        grid: {
                            display: false
                        }
                    }

                },
                indexAxis: 'x',
            }
        });
    }
</script>